{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\ncreateSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itmes.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.itmes.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantiy++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.itmes.find(item => item.id === id);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantiy--;\n      }\n    }\n\n  }\n});","map":{"version":3,"sources":["/Users/seunghwan/Desktop/coding/youn/redux-booking-system/src/store/cart-slice.js"],"names":["createSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","itmes","find","item","id","push","itemId","price","quantity","totalPrice","title","quantiy","removeItemFromCart","filter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEAA,WAAW,CAAC;AACVC,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,WAAW,EAAE;AAHD,GAFJ;AAOVC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,OAAO,CAACM,EAA/C,CAArB;;AACA,UAAI,CAACJ,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACK,KAAN,CAAYI,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAER,OAAO,CAACM,EADD;AAEfG,UAAAA,KAAK,EAAET,OAAO,CAACS,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEX,OAAO,CAACS,KAJL;AAKflB,UAAAA,IAAI,EAAES,OAAO,CAACY;AALC,SAAjB;AAOD,OARD,MAQO;AACLV,QAAAA,YAAY,CAACW,OAAb;AACAX,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BX,OAAO,CAACS,KAA5D;AACD;AACF,KAhBO;;AAkBRK,IAAAA,kBAAkB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMO,EAAE,GAAGP,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACK,KAAN,CAAYC,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;;AACA,UAAIJ,YAAY,CAACQ,QAAb,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAoBV,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACW,OAAb;AACD;AACF;;AA1BO;AAPA,CAAD,CAAX","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ncreateSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itmes.find((item) => item.id === newItem.id);\n      if (!existingItem) {\n        state.itmes.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantiy++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.itmes.find((item) => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantiy--;\n      }\n    },\n  },\n});\n"]},"metadata":{},"sourceType":"module"}