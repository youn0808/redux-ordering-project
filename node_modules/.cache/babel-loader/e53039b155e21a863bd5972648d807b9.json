{"ast":null,"code":"// import { createSlice } from '@reduxjs/toolkit';\n// const cartSlice = createSlice({\n//   name: 'cart',\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//   },\n//   reducers: {\n//     addItemToCart(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n//       }\n//     },\n//     removeItemFromCart(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find(item => item.id === id);\n//       state.totalQuantity--;\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter(item => item.id !== id);\n//       } else {\n//         existingItem.quantity--;\n//       }\n//     },\n//   },\n// });\n// export const cartActions = cartSlice.actions;\n// export default cartSlice;","map":{"version":3,"sources":["/Users/seunghwan/Desktop/coding/youn/redux-booking-system/src/store/cart-slice.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import { createSlice } from '@reduxjs/toolkit';\n\n// const cartSlice = createSlice({\n//   name: 'cart',\n//   initialState: {\n//     items: [],\n//     totalQuantity: 0,\n//   },\n//   reducers: {\n//     addItemToCart(state, action) {\n//       const newItem = action.payload;\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\n//       state.totalQuantity++;\n//       if (!existingItem) {\n//         state.items.push({\n//           id: newItem.id,\n//           price: newItem.price,\n//           quantity: 1,\n//           totalPrice: newItem.price,\n//           name: newItem.title\n//         });\n//       } else {\n//         existingItem.quantity++;\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n//       }\n//     },\n//     removeItemFromCart(state, action) {\n//       const id = action.payload;\n//       const existingItem = state.items.find(item => item.id === id);\n//       state.totalQuantity--;\n//       if (existingItem.quantity === 1) {\n//         state.items = state.items.filter(item => item.id !== id);\n//       } else {\n//         existingItem.quantity--;\n//       }\n//     },\n//   },\n// });\n\n// export const cartActions = cartSlice.actions;\n\n// export default cartSlice;\n"]},"metadata":{},"sourceType":"module"}