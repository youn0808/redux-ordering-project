{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\ncreateSlice({\n  name: \"cart\",\n  initialState: {\n    itmes: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itmes.find(item => item.id === newItem.id);\n\n      if (!existingItem) {\n        state.itmes.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantiy++;\n        existingItem.totalPrice = totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart() {}\n\n  }\n});","map":{"version":3,"sources":["/Users/seunghwan/Desktop/coding/youn/redux-booking-system/src/store/cart-slice.js"],"names":["createSlice","name","initialState","itmes","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","quantiy","removeItemFromCart"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEAA,WAAW,CAAC;AACVC,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE,CAFH;AAGZC,IAAAA,WAAW,EAAE;AAHD,GAFJ;AAOVC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;;AACA,UAAI,CAACH,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADD;AAEfG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAJL;AAKfjB,UAAAA,IAAI,EAAES,OAAO,CAACW;AALC,SAAjB;AAOD,OARD,MAQO;AACLT,QAAAA,YAAY,CAACU,OAAb;AACAV,QAAAA,YAAY,CAACQ,UAAb,GAA0BA,UAAU,GAAGV,OAAO,CAACQ,KAA/C;AACD;AACF,KAhBO;;AAiBRK,IAAAA,kBAAkB,GAAG,CAAE;;AAjBf;AAPA,CAAD,CAAX","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ncreateSlice({\n  name: \"cart\",\n  initialState: {\n    itmes: [],\n    totalQuantity: 0,\n    totalAmount: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itmes.find((item) => item.id === newItem.id);\n      if (!existingItem) {\n        state.itmes.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantiy++;\n        existingItem.totalPrice = totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart() {},\n  },\n});\n"]},"metadata":{},"sourceType":"module"}